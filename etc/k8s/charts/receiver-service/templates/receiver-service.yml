apiVersion: v1
kind: Service
metadata:
  name: receiver-service
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: receiver-service

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: receiver-service
  labels:
    app: receiver-service
spec:
  replicas: {{ .Values.application.replicas }}
  selector:
    matchLabels:
      app: receiver-service
  template:
    metadata:
      annotations:
        prometheus/scrape_enabled: "true"
        prometheus/scrape_endpoint: "/actuator/prometheus"
        prometheus/scrape_port: "8080"
        fluentbit.io/parser: "appservices"
      labels:
        app: receiver-service
    spec:
      containers:
        - name: receiver-service
          image: "{{ .Values.application.image }}"
          imagePullPolicy: {{ .Values.application.imagePullPolicy }}
          env:
            - name: JAVA_TOOL_OPTIONS
              value: -Xms128m -Xmx128m -XX:+UseContainerSupport -XX:+AlwaysActAsServerClassMachine -XX:+AlwaysPreTouch
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
          resources:
            requests:
              cpu: 250m
              memory: 500Mi
            limits:
              cpu: 1
              memory: 500Mi
